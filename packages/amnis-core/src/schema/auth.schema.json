{
  "$id": "auth",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$ref": "#/definitions/AuthSchema",
  "definitions": {
    "AuthSchema": {
      "type": "object",
      "properties": {
        "challenge": {
          "$ref": "#/definitions/AuthChallenge"
        },
        "register": {
          "$ref": "#/definitions/AuthRegistration"
        },
        "login": {
          "$ref": "#/definitions/AuthLogin"
        },
        "logout": {
          "$ref": "#/definitions/AuthLogout"
        },
        "renew": {
          "$ref": "#/definitions/AuthRenew"
        },
        "verify": {
          "$ref": "#/definitions/AuthVerify"
        }
      },
      "additionalProperties": false
    },
    "AuthChallenge": {
      "type": "object",
      "additionalProperties": false,
      "description": "Challenge Generation Request."
    },
    "AuthRegistration": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 2,
          "maxLength": 24,
          "pattern": "^[a-zA-Z0-9-_]+$",
          "description": "The usename to register under."
        },
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 32,
          "description": "The password for the registration."
        },
        "displayName": {
          "type": "string",
          "minLength": 2,
          "maxLength": 24,
          "description": "The display name to register under."
        },
        "challenge": {
          "type": "string",
          "minLength": 16,
          "maxLength": 512
        },
        "origin": {
          "type": "string",
          "minLength": 4,
          "maxLength": 32
        },
        "type": {
          "type": "string",
          "enum": [
            "auth.create",
            "webauthn.create"
          ]
        },
        "credential": {
          "type": "string",
          "minLength": 16,
          "maxLength": 512
        },
        "signature": {
          "type": "string",
          "minLength": 16,
          "maxLength": 512,
          "description": "Encoded attestation signature of the credential object."
        }
      },
      "required": [
        "username",
        "password",
        "displayName",
        "challenge",
        "origin",
        "type",
        "credential",
        "signature"
      ],
      "additionalProperties": false,
      "description": "Payload for an registration request. A value of undefined starts a registration event."
    },
    "AuthLogin": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 2,
          "maxLength": 24,
          "pattern": "^[a-zA-Z0-9-_]+$",
          "description": "Unique name for login credentials"
        },
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 32,
          "description": "The password for the login."
        },
        "challenge": {
          "type": "string",
          "minLength": 16,
          "maxLength": 512
        },
        "$credential": {
          "type": "string",
          "minLength": 12,
          "maxLength": 40,
          "description": "Credential identifier to use on the user account."
        },
        "signature": {
          "type": "string",
          "minLength": 8,
          "maxLength": 512,
          "description": "Agent's cryptographic signature of the username and challenge."
        }
      },
      "required": [
        "username",
        "challenge",
        "$credential",
        "signature"
      ],
      "additionalProperties": false,
      "description": "Payload for a login request."
    },
    "AuthLogout": {
      "type": "object",
      "additionalProperties": {
        "not": {}
      },
      "description": "Payload that destroys the user session and connection."
    },
    "AuthRenew": {
      "type": "object",
      "properties": {
        "info": {
          "type": "boolean",
          "description": "Include user and profile data with the response."
        }
      },
      "additionalProperties": false,
      "description": "Payload for a session and bearer renewal. Should not have any data in the body."
    },
    "AuthVerify": {
      "$ref": "#/definitions/Bearer",
      "description": "Verifies the validity of a stringified bearer."
    },
    "Bearer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Bearer identifier."
        },
        "exp": {
          "$ref": "#/definitions/DateNumeric",
          "description": "Expiration date."
        },
        "access": {
          "type": "string",
          "description": "Encoded access token."
        }
      },
      "required": [
        "id",
        "exp",
        "access"
      ],
      "additionalProperties": false,
      "description": "An interface for a bearer."
    },
    "DateNumeric": {
      "type": "number",
      "description": "A string that represents a JSON Date."
    }
  }
}
