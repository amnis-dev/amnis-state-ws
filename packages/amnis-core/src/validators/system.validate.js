"use strict";module.exports = validate28;module.exports.default = validate28;const schema60 = {"$id":"core-system","$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/System","definitions":{"System":{"type":"object","properties":{"$id":{"$ref":"#/definitions/Reference","description":"Identifier for this entity.","default":""},"created":{"$ref":"#/definitions/DateJSON","description":"Creation date string.","default":""},"updated":{"$ref":"#/definitions/DateJSON","description":"Updated date string.","default":""},"committed":{"type":"boolean","description":"Flag to determine if the entity has been committed to storage.","default":false},"delete":{"type":"boolean","description":"If this entity is marked to be deleted.","default":false},"$owner":{"$ref":"#/definitions/Reference","description":"Entity that owns this data."},"$creator":{"$ref":"#/definitions/Reference","description":"Possible user id creator of the entity."},"$updaters":{"type":"array","items":{"$ref":"#/definitions/Reference"},"description":"Entities that have updated this."},"name":{"type":"string","description":"Name of the system."},"sessionExpires":{"type":"number","description":"Number in minutes that an authentication session should live.","default":60},"$website":{"$ref":"#/definitions/Reference%3CWebsite%3E","description":"System's website configurations."},"$initialRoles":{"type":"array","items":{"$ref":"#/definitions/Reference%3CRole%3E"},"description":"The initial roles to assign to a user when a new account is created.","default":[]}},"required":["$creator","$id","$initialRoles","$owner","$updaters","$website","committed","created","delete","name","sessionExpires","updated"],"additionalProperties":false},"Reference":{"type":"string","description":"A id reference to another document."},"DateJSON":{"type":"string","description":"A string that represents a JSON Date."},"Reference<Website>":{"type":"string","description":"A id reference to another document."},"Reference<Role>":{"type":"string","description":"A id reference to another document."}}};const schema61 = {"type":"object","properties":{"$id":{"$ref":"#/definitions/Reference","description":"Identifier for this entity.","default":""},"created":{"$ref":"#/definitions/DateJSON","description":"Creation date string.","default":""},"updated":{"$ref":"#/definitions/DateJSON","description":"Updated date string.","default":""},"committed":{"type":"boolean","description":"Flag to determine if the entity has been committed to storage.","default":false},"delete":{"type":"boolean","description":"If this entity is marked to be deleted.","default":false},"$owner":{"$ref":"#/definitions/Reference","description":"Entity that owns this data."},"$creator":{"$ref":"#/definitions/Reference","description":"Possible user id creator of the entity."},"$updaters":{"type":"array","items":{"$ref":"#/definitions/Reference"},"description":"Entities that have updated this."},"name":{"type":"string","description":"Name of the system."},"sessionExpires":{"type":"number","description":"Number in minutes that an authentication session should live.","default":60},"$website":{"$ref":"#/definitions/Reference%3CWebsite%3E","description":"System's website configurations."},"$initialRoles":{"type":"array","items":{"$ref":"#/definitions/Reference%3CRole%3E"},"description":"The initial roles to assign to a user when a new account is created.","default":[]}},"required":["$creator","$id","$initialRoles","$owner","$updaters","$website","committed","created","delete","name","sessionExpires","updated"],"additionalProperties":false};const schema62 = {"type":"string","description":"A id reference to another document."};const schema63 = {"type":"string","description":"A string that represents a JSON Date."};const schema68 = {"type":"string","description":"A id reference to another document."};const schema69 = {"type":"string","description":"A id reference to another document."};const func2 = Object.prototype.hasOwnProperty;function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((((((data.$creator === undefined) && (missing0 = "$creator")) || ((data.$id === undefined) && (missing0 = "$id"))) || ((data.$initialRoles === undefined) && (missing0 = "$initialRoles"))) || ((data.$owner === undefined) && (missing0 = "$owner"))) || ((data.$updaters === undefined) && (missing0 = "$updaters"))) || ((data.$website === undefined) && (missing0 = "$website"))) || ((data.committed === undefined) && (missing0 = "committed"))) || ((data.created === undefined) && (missing0 = "created"))) || ((data.delete === undefined) && (missing0 = "delete"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.sessionExpires === undefined) && (missing0 = "sessionExpires"))) || ((data.updated === undefined) && (missing0 = "updated"))){validate29.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema61.properties, key0))){validate29.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.$id !== undefined){const _errs2 = errors;if(typeof data.$id !== "string"){validate29.errors = [{instancePath:instancePath+"/$id",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs5 = errors;if(typeof data.created !== "string"){validate29.errors = [{instancePath:instancePath+"/created",schemaPath:"#/definitions/DateJSON/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs8 = errors;if(typeof data.updated !== "string"){validate29.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/definitions/DateJSON/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.committed !== undefined){const _errs11 = errors;if(typeof data.committed !== "boolean"){validate29.errors = [{instancePath:instancePath+"/committed",schemaPath:"#/properties/committed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.delete !== undefined){const _errs13 = errors;if(typeof data.delete !== "boolean"){validate29.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.$owner !== undefined){const _errs15 = errors;if(typeof data.$owner !== "string"){validate29.errors = [{instancePath:instancePath+"/$owner",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.$creator !== undefined){const _errs18 = errors;if(typeof data.$creator !== "string"){validate29.errors = [{instancePath:instancePath+"/$creator",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.$updaters !== undefined){let data7 = data.$updaters;const _errs21 = errors;if(errors === _errs21){if(Array.isArray(data7)){var valid6 = true;const len0 = data7.length;for(let i0=0; i0<len0; i0++){const _errs23 = errors;if(typeof data7[i0] !== "string"){validate29.errors = [{instancePath:instancePath+"/$updaters/" + i0,schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs23 === errors;if(!valid6){break;}}}else {validate29.errors = [{instancePath:instancePath+"/$updaters",schemaPath:"#/properties/%24updaters/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs26 = errors;if(typeof data.name !== "string"){validate29.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.sessionExpires !== undefined){let data10 = data.sessionExpires;const _errs28 = errors;if(!((typeof data10 == "number") && (isFinite(data10)))){validate29.errors = [{instancePath:instancePath+"/sessionExpires",schemaPath:"#/properties/sessionExpires/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.$website !== undefined){const _errs30 = errors;if(typeof data.$website !== "string"){validate29.errors = [{instancePath:instancePath+"/$website",schemaPath:"#/definitions/Reference%3CWebsite%3E/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.$initialRoles !== undefined){let data12 = data.$initialRoles;const _errs33 = errors;if(errors === _errs33){if(Array.isArray(data12)){var valid9 = true;const len1 = data12.length;for(let i1=0; i1<len1; i1++){const _errs35 = errors;if(typeof data12[i1] !== "string"){validate29.errors = [{instancePath:instancePath+"/$initialRoles/" + i1,schemaPath:"#/definitions/Reference%3CRole%3E/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs35 === errors;if(!valid9){break;}}}else {validate29.errors = [{instancePath:instancePath+"/$initialRoles",schemaPath:"#/properties/%24initialRoles/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs33 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="core-system" */;let vErrors = null;let errors = 0;if(!(validate29(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}validate28.errors = vErrors;return errors === 0;}