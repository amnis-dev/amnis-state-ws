"use strict";module.exports = validate21;module.exports.default = validate21;const schema36 = {"$id":"core-profile","$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/Profile","definitions":{"Profile":{"type":"object","properties":{"$id":{"$ref":"#/definitions/Reference","description":"Identifier for this entity.","default":""},"created":{"$ref":"#/definitions/DateJSON","description":"Creation date string.","default":""},"updated":{"$ref":"#/definitions/DateJSON","description":"Updated date string.","default":""},"committed":{"type":"boolean","description":"Flag to determine if the entity has been committed to storage.","default":false},"delete":{"type":"boolean","description":"If this entity is marked to be deleted.","default":false},"$owner":{"$ref":"#/definitions/Reference","description":"Entity that owns this data."},"$creator":{"$ref":"#/definitions/Reference","description":"Possible user id creator of the entity."},"$updaters":{"type":"array","items":{"$ref":"#/definitions/Reference"},"description":"Entities that have updated this."},"$user":{"$ref":"#/definitions/Reference%3CUser%3E","description":"User this profile is associated with."},"nameDisplay":{"type":"string","description":"Display name for the profile."},"nameGiven":{"type":"string","description":"Given/First name"},"nameFamily":{"type":"string","description":"Family/Last name"},"birthDate":{"type":"string","description":"Date of birth."},"title":{"type":"string","description":"Title for work or otherwise."},"email":{"type":"string","description":"Profile's email."},"phone":{"type":"string","description":"Profiles phone number."},"organiation":{"type":"string","description":"Organization profile is a part of."},"avatar":{"$ref":"#/definitions/SURL","description":"Avatar string url to an image."}},"required":["$creator","$id","$owner","$updaters","$user","committed","created","delete","nameDisplay","updated"],"additionalProperties":false,"description":"Profile entity"},"Reference":{"type":"string","description":"A id reference to another document."},"DateJSON":{"type":"string","description":"A string that represents a JSON Date."},"Reference<User>":{"type":"string","description":"A id reference to another document."},"SURL":{"type":"string","description":"A string that represents a URL. Named SURL (String URL) so it's not confused with the URL object type."}}};const schema37 = {"type":"object","properties":{"$id":{"$ref":"#/definitions/Reference","description":"Identifier for this entity.","default":""},"created":{"$ref":"#/definitions/DateJSON","description":"Creation date string.","default":""},"updated":{"$ref":"#/definitions/DateJSON","description":"Updated date string.","default":""},"committed":{"type":"boolean","description":"Flag to determine if the entity has been committed to storage.","default":false},"delete":{"type":"boolean","description":"If this entity is marked to be deleted.","default":false},"$owner":{"$ref":"#/definitions/Reference","description":"Entity that owns this data."},"$creator":{"$ref":"#/definitions/Reference","description":"Possible user id creator of the entity."},"$updaters":{"type":"array","items":{"$ref":"#/definitions/Reference"},"description":"Entities that have updated this."},"$user":{"$ref":"#/definitions/Reference%3CUser%3E","description":"User this profile is associated with."},"nameDisplay":{"type":"string","description":"Display name for the profile."},"nameGiven":{"type":"string","description":"Given/First name"},"nameFamily":{"type":"string","description":"Family/Last name"},"birthDate":{"type":"string","description":"Date of birth."},"title":{"type":"string","description":"Title for work or otherwise."},"email":{"type":"string","description":"Profile's email."},"phone":{"type":"string","description":"Profiles phone number."},"organiation":{"type":"string","description":"Organization profile is a part of."},"avatar":{"$ref":"#/definitions/SURL","description":"Avatar string url to an image."}},"required":["$creator","$id","$owner","$updaters","$user","committed","created","delete","nameDisplay","updated"],"additionalProperties":false,"description":"Profile entity"};const schema38 = {"type":"string","description":"A id reference to another document."};const schema39 = {"type":"string","description":"A string that represents a JSON Date."};const schema44 = {"type":"string","description":"A id reference to another document."};const schema45 = {"type":"string","description":"A string that represents a URL. Named SURL (String URL) so it's not confused with the URL object type."};const func2 = Object.prototype.hasOwnProperty;function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((((data.$creator === undefined) && (missing0 = "$creator")) || ((data.$id === undefined) && (missing0 = "$id"))) || ((data.$owner === undefined) && (missing0 = "$owner"))) || ((data.$updaters === undefined) && (missing0 = "$updaters"))) || ((data.$user === undefined) && (missing0 = "$user"))) || ((data.committed === undefined) && (missing0 = "committed"))) || ((data.created === undefined) && (missing0 = "created"))) || ((data.delete === undefined) && (missing0 = "delete"))) || ((data.nameDisplay === undefined) && (missing0 = "nameDisplay"))) || ((data.updated === undefined) && (missing0 = "updated"))){validate22.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema37.properties, key0))){validate22.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.$id !== undefined){const _errs2 = errors;if(typeof data.$id !== "string"){validate22.errors = [{instancePath:instancePath+"/$id",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs5 = errors;if(typeof data.created !== "string"){validate22.errors = [{instancePath:instancePath+"/created",schemaPath:"#/definitions/DateJSON/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs8 = errors;if(typeof data.updated !== "string"){validate22.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/definitions/DateJSON/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.committed !== undefined){const _errs11 = errors;if(typeof data.committed !== "boolean"){validate22.errors = [{instancePath:instancePath+"/committed",schemaPath:"#/properties/committed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.delete !== undefined){const _errs13 = errors;if(typeof data.delete !== "boolean"){validate22.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.$owner !== undefined){const _errs15 = errors;if(typeof data.$owner !== "string"){validate22.errors = [{instancePath:instancePath+"/$owner",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.$creator !== undefined){const _errs18 = errors;if(typeof data.$creator !== "string"){validate22.errors = [{instancePath:instancePath+"/$creator",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.$updaters !== undefined){let data7 = data.$updaters;const _errs21 = errors;if(errors === _errs21){if(Array.isArray(data7)){var valid6 = true;const len0 = data7.length;for(let i0=0; i0<len0; i0++){const _errs23 = errors;if(typeof data7[i0] !== "string"){validate22.errors = [{instancePath:instancePath+"/$updaters/" + i0,schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs23 === errors;if(!valid6){break;}}}else {validate22.errors = [{instancePath:instancePath+"/$updaters",schemaPath:"#/properties/%24updaters/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.$user !== undefined){const _errs26 = errors;if(typeof data.$user !== "string"){validate22.errors = [{instancePath:instancePath+"/$user",schemaPath:"#/definitions/Reference%3CUser%3E/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.nameDisplay !== undefined){const _errs29 = errors;if(typeof data.nameDisplay !== "string"){validate22.errors = [{instancePath:instancePath+"/nameDisplay",schemaPath:"#/properties/nameDisplay/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.nameGiven !== undefined){const _errs31 = errors;if(typeof data.nameGiven !== "string"){validate22.errors = [{instancePath:instancePath+"/nameGiven",schemaPath:"#/properties/nameGiven/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.nameFamily !== undefined){const _errs33 = errors;if(typeof data.nameFamily !== "string"){validate22.errors = [{instancePath:instancePath+"/nameFamily",schemaPath:"#/properties/nameFamily/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs33 === errors;}else {var valid0 = true;}if(valid0){if(data.birthDate !== undefined){const _errs35 = errors;if(typeof data.birthDate !== "string"){validate22.errors = [{instancePath:instancePath+"/birthDate",schemaPath:"#/properties/birthDate/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){const _errs37 = errors;if(typeof data.title !== "string"){validate22.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs37 === errors;}else {var valid0 = true;}if(valid0){if(data.email !== undefined){const _errs39 = errors;if(typeof data.email !== "string"){validate22.errors = [{instancePath:instancePath+"/email",schemaPath:"#/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.phone !== undefined){const _errs41 = errors;if(typeof data.phone !== "string"){validate22.errors = [{instancePath:instancePath+"/phone",schemaPath:"#/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.organiation !== undefined){const _errs43 = errors;if(typeof data.organiation !== "string"){validate22.errors = [{instancePath:instancePath+"/organiation",schemaPath:"#/properties/organiation/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.avatar !== undefined){const _errs45 = errors;if(typeof data.avatar !== "string"){validate22.errors = [{instancePath:instancePath+"/avatar",schemaPath:"#/definitions/SURL/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="core-profile" */;let vErrors = null;let errors = 0;if(!(validate22(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}validate21.errors = vErrors;return errors === 0;}