"use strict";module.exports = validate14;module.exports.default = validate14;const schema15 = {"$id":"core-image","$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/Image","definitions":{"Image":{"type":"object","properties":{"$id":{"$ref":"#/definitions/Reference","description":"Identifier for this entity.","default":""},"created":{"$ref":"#/definitions/DateJSON","description":"Creation date string.","default":""},"updated":{"$ref":"#/definitions/DateJSON","description":"Updated date string.","default":""},"committed":{"type":"boolean","description":"Flag to determine if the entity has been committed to storage.","default":false},"delete":{"type":"boolean","description":"If this entity is marked to be deleted.","default":false},"$owner":{"$ref":"#/definitions/Reference","description":"Entity that owns this data."},"$creator":{"$ref":"#/definitions/Reference","description":"Possible user id creator of the entity."},"$updaters":{"type":"array","items":{"$ref":"#/definitions/Reference"},"description":"Entities that have updated this."},"title":{"type":"string","description":"Title of the image."},"description":{"type":"string","description":"Description for the image."},"author":{"type":"string","description":"String name of the media author."},"$author":{"$ref":"#/definitions/Reference%3CProfile%3E","description":"Profile reference to the author."},"source":{"$ref":"#/definitions/SURL","description":"The source url for the media."},"size":{"type":"number","description":"Size of the media on disk in bytes."},"format":{"type":"string","enum":["webp","jpeg","png","bmp","tiff"],"description":"image format type."},"width":{"type":"number","description":"Original width in pixels."},"height":{"type":"number","description":"Original height in pixels."},"aspect":{"type":"number","description":"Aspect ratio calculation (width / height)."}},"required":["$creator","$id","$owner","$updaters","aspect","committed","created","delete","format","height","size","source","title","updated","width"],"additionalProperties":false},"Reference":{"type":"string","description":"A id reference to another document."},"DateJSON":{"type":"string","description":"A string that represents a JSON Date."},"Reference<Profile>":{"type":"string","description":"A id reference to another document."},"SURL":{"type":"string","description":"A string that represents a URL. Named SURL (String URL) so it's not confused with the URL object type."}}};const schema16 = {"type":"object","properties":{"$id":{"$ref":"#/definitions/Reference","description":"Identifier for this entity.","default":""},"created":{"$ref":"#/definitions/DateJSON","description":"Creation date string.","default":""},"updated":{"$ref":"#/definitions/DateJSON","description":"Updated date string.","default":""},"committed":{"type":"boolean","description":"Flag to determine if the entity has been committed to storage.","default":false},"delete":{"type":"boolean","description":"If this entity is marked to be deleted.","default":false},"$owner":{"$ref":"#/definitions/Reference","description":"Entity that owns this data."},"$creator":{"$ref":"#/definitions/Reference","description":"Possible user id creator of the entity."},"$updaters":{"type":"array","items":{"$ref":"#/definitions/Reference"},"description":"Entities that have updated this."},"title":{"type":"string","description":"Title of the image."},"description":{"type":"string","description":"Description for the image."},"author":{"type":"string","description":"String name of the media author."},"$author":{"$ref":"#/definitions/Reference%3CProfile%3E","description":"Profile reference to the author."},"source":{"$ref":"#/definitions/SURL","description":"The source url for the media."},"size":{"type":"number","description":"Size of the media on disk in bytes."},"format":{"type":"string","enum":["webp","jpeg","png","bmp","tiff"],"description":"image format type."},"width":{"type":"number","description":"Original width in pixels."},"height":{"type":"number","description":"Original height in pixels."},"aspect":{"type":"number","description":"Aspect ratio calculation (width / height)."}},"required":["$creator","$id","$owner","$updaters","aspect","committed","created","delete","format","height","size","source","title","updated","width"],"additionalProperties":false};const schema17 = {"type":"string","description":"A id reference to another document."};const schema18 = {"type":"string","description":"A string that represents a JSON Date."};const schema23 = {"type":"string","description":"A id reference to another document."};const schema24 = {"type":"string","description":"A string that represents a URL. Named SURL (String URL) so it's not confused with the URL object type."};const func2 = Object.prototype.hasOwnProperty;function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((((((((((((data.$creator === undefined) && (missing0 = "$creator")) || ((data.$id === undefined) && (missing0 = "$id"))) || ((data.$owner === undefined) && (missing0 = "$owner"))) || ((data.$updaters === undefined) && (missing0 = "$updaters"))) || ((data.aspect === undefined) && (missing0 = "aspect"))) || ((data.committed === undefined) && (missing0 = "committed"))) || ((data.created === undefined) && (missing0 = "created"))) || ((data.delete === undefined) && (missing0 = "delete"))) || ((data.format === undefined) && (missing0 = "format"))) || ((data.height === undefined) && (missing0 = "height"))) || ((data.size === undefined) && (missing0 = "size"))) || ((data.source === undefined) && (missing0 = "source"))) || ((data.title === undefined) && (missing0 = "title"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.width === undefined) && (missing0 = "width"))){validate15.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema16.properties, key0))){validate15.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.$id !== undefined){const _errs2 = errors;if(typeof data.$id !== "string"){validate15.errors = [{instancePath:instancePath+"/$id",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs5 = errors;if(typeof data.created !== "string"){validate15.errors = [{instancePath:instancePath+"/created",schemaPath:"#/definitions/DateJSON/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs8 = errors;if(typeof data.updated !== "string"){validate15.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/definitions/DateJSON/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.committed !== undefined){const _errs11 = errors;if(typeof data.committed !== "boolean"){validate15.errors = [{instancePath:instancePath+"/committed",schemaPath:"#/properties/committed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.delete !== undefined){const _errs13 = errors;if(typeof data.delete !== "boolean"){validate15.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.$owner !== undefined){const _errs15 = errors;if(typeof data.$owner !== "string"){validate15.errors = [{instancePath:instancePath+"/$owner",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.$creator !== undefined){const _errs18 = errors;if(typeof data.$creator !== "string"){validate15.errors = [{instancePath:instancePath+"/$creator",schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.$updaters !== undefined){let data7 = data.$updaters;const _errs21 = errors;if(errors === _errs21){if(Array.isArray(data7)){var valid6 = true;const len0 = data7.length;for(let i0=0; i0<len0; i0++){const _errs23 = errors;if(typeof data7[i0] !== "string"){validate15.errors = [{instancePath:instancePath+"/$updaters/" + i0,schemaPath:"#/definitions/Reference/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs23 === errors;if(!valid6){break;}}}else {validate15.errors = [{instancePath:instancePath+"/$updaters",schemaPath:"#/properties/%24updaters/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){const _errs26 = errors;if(typeof data.title !== "string"){validate15.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs28 = errors;if(typeof data.description !== "string"){validate15.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){const _errs30 = errors;if(typeof data.author !== "string"){validate15.errors = [{instancePath:instancePath+"/author",schemaPath:"#/properties/author/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.$author !== undefined){const _errs32 = errors;if(typeof data.$author !== "string"){validate15.errors = [{instancePath:instancePath+"/$author",schemaPath:"#/definitions/Reference%3CProfile%3E/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.source !== undefined){const _errs35 = errors;if(typeof data.source !== "string"){validate15.errors = [{instancePath:instancePath+"/source",schemaPath:"#/definitions/SURL/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.size !== undefined){let data14 = data.size;const _errs38 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate15.errors = [{instancePath:instancePath+"/size",schemaPath:"#/properties/size/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.format !== undefined){let data15 = data.format;const _errs40 = errors;if(typeof data15 !== "string"){validate15.errors = [{instancePath:instancePath+"/format",schemaPath:"#/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((data15 === "webp") || (data15 === "jpeg")) || (data15 === "png")) || (data15 === "bmp")) || (data15 === "tiff"))){validate15.errors = [{instancePath:instancePath+"/format",schemaPath:"#/properties/format/enum",keyword:"enum",params:{allowedValues: schema16.properties.format.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.width !== undefined){let data16 = data.width;const _errs42 = errors;if(!((typeof data16 == "number") && (isFinite(data16)))){validate15.errors = [{instancePath:instancePath+"/width",schemaPath:"#/properties/width/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.height !== undefined){let data17 = data.height;const _errs44 = errors;if(!((typeof data17 == "number") && (isFinite(data17)))){validate15.errors = [{instancePath:instancePath+"/height",schemaPath:"#/properties/height/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.aspect !== undefined){let data18 = data.aspect;const _errs46 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){validate15.errors = [{instancePath:instancePath+"/aspect",schemaPath:"#/properties/aspect/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs46 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate15.errors = vErrors;return errors === 0;}function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="core-image" */;let vErrors = null;let errors = 0;if(!(validate15(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}validate14.errors = vErrors;return errors === 0;}